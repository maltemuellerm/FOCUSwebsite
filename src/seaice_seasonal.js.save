var currentTime = new Date();
currentTime.setUTCHours(0, 0, 0, 0);
var startDate = new Date(currentTime.getTime());
var endDate = new Date(currentTime.getTime());
L.TimeDimension.Util.addTimeDuration(endDate, "P6M", true);
var crs = new L.Proj.CRS('EPSG:5938','+proj=stere +lat_0=90 +lat_ts=90 +lon_0=-33 +k=0.994 +x_0=2000000 +y_0=2000000 +datum=WGS84 +units=m +no_defs',
  {
    resolutions: [8192, 4096, 2048],
  }
);
var crsm = new L.Proj.CRS('EPSG:4326','+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs',
  {
    resolutions: [8192, 4096, 2048],
    origin: [0,0]
  }
);

var map = L.map('map', {
    zoom: 4,
//    crs: L.CRS.EPSG4326, 
    fullscreenControl: true,
    timeDimension: true,
    timeDimensionControl: true,
    timeDimensionOptions: {
        //timeInterval: "2018-09-01T14:00:00.000Z/"  + endDate.toISOString(),
        timeInterval: startDate.toISOString() + "/" + endDate.toISOString(),
        period: "P1D",
        //period: "PT1H",
        //currentTime: currentTime.getTime()
    },
    center: [79.5, 10.0]
});

var aromeWMS = "http://thredds.met.no/thredds/catalog/aromearcticlatest/catalog.html?dataset=aromearcticlatest/arome_arctic_extracted_2_5km_latest.nc";
var seas5WMS = "http://thredds.met.no/thredds/wms/metusers/maltem/SALIENSEAS/SEAS5/Arctic.SEAS5_sfc_SIP_00-50_20190301.nc"
var osisWMS = "http://thredds.met.no/thredds/wms/metusers/maltem/SALIENSEAS/SEAS5/OSISAF_climatology_SIP_2006_2015_20190301.nc"
var sentinelWMS = "http://nbswms.met.no/thredds/wms/NBS/S1A/2018/11/19/EW/S1A_EW_GRDM_1SDH_20181119T074611_20181119T074721_024654_02B588_0805.nc";
var arcWMS   = "http://nrt.cmems-du.eu/thredds/wms/dataset-topaz4-arc-1hr-myoceanv2-be";
var icetacWMS   = "http://nrt.cmems-du.eu/thredds/wms/METNO-ARC-SEAICE_CONC-L4-NRT-OBS";
var sariceWMS ="http://thredds.met.no/thredds/wms/sea_ice/SIW-METNO-ARC-SEAICE_HR-OBS/ice_conc_svalbard_aggregated";

var SEASconcLayer =  L.timeDimension.layer.wms(
    L.tileLayer.wms(seas5WMS, {
    layers: 'SIP',
    format: 'image/png',
    transparent: true,
    colorscalerange: '0.,1',
    abovemaxcolor: "extend",
    belowmincolor: "extend",
    numcolorbands: 10,
    styles: 'boxfill/occam' }), {
    proxy: proxy,
    updateTimeDimension: true
});
var OSISconcLayer =  L.timeDimension.layer.wms(
    L.tileLayer.wms(osisWMS, {
    layers: 'SIP',
    format: 'image/png',
    transparent: true,
    colorscalerange: '0.,1',
    abovemaxcolor: "extend",
    belowmincolor: "extend",
    numcolorbands: 10,
    styles: 'boxfill/occam' }), {
    proxy: proxy,
    updateTimeDimension: true
});


var SEAScontLayer =  L.timeDimension.layer.wms(
    L.tileLayer.wms(seas5WMS, {
    layers: 'SIP',
    format: 'image/png',
    transparent: true,
    colorscalerange: '0.14,0.15',
    numcolorbands: 1,
    styles: 'contour/rainbow' }), {
    proxy: proxy,
    updateTimeDimension: true
});

var proxy = 'server/proxy.php';


var overlayMaps = {
    "Sea Ice Probability - [0 1]": SEASconcLayer,
    "Climatological Probability - [0 1]": OSISconcLayer
};

var testLegend = L.control({
    position: 'bottomleft'
});
testLegend.onAdd = function(map) {
    var src = seas5WMS + "?SERVICE=WMS&VERSION=1.3.0&REQUEST=GetLegendGraphic&LAYER=SIP&PALETTE=occam&numcolorbands=10&colorscalerange=0,100";
    var div = L.DomUtil.create('div', 'info legend');
    div.innerHTML +=
        '<img src="' + src + '" alt="legend">';
    return div;
};
testLegend.addTo(map);


var baseLayers = getCommonBaseLayers(map); // see baselayers.js
L.control.layers(baseLayers, overlayMaps).addTo(map);
SEASconcLayer.addTo(map);

